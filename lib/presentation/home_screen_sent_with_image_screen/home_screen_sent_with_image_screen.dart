import 'package:flutter/material.dart';import 'package:readmore/readmore.dart';import 'package:the_s_application5/core/app_export.dart';import 'package:the_s_application5/presentation/home_screen_page/home_screen_page.dart';import 'package:the_s_application5/presentation/messages_page/messages_page.dart';import 'package:the_s_application5/presentation/my_order_from_me_tab_container_page/my_order_from_me_tab_container_page.dart';import 'package:the_s_application5/presentation/my_profile_page/my_profile_page.dart';import 'package:the_s_application5/widgets/app_bar/appbar_image.dart';import 'package:the_s_application5/widgets/app_bar/appbar_subtitle_2.dart';import 'package:the_s_application5/widgets/app_bar/appbar_subtitle_3.dart';import 'package:the_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:the_s_application5/widgets/custom_bottom_bar.dart';import 'package:the_s_application5/widgets/custom_elevated_button.dart';
// ignore_for_file: must_be_immutable
class HomeScreenSentWithImageScreen extends StatelessWidget {HomeScreenSentWithImageScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.whiteA70001, appBar: CustomAppBar(height: getVerticalSize(89), centerTitle: true, title: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 24, right: 24), child: Row(children: [AppbarImage(height: getSize(22), width: getSize(22), svgPath: ImageConstant.imgArrowleft, margin: getMargin(top: 13, bottom: 13), onTap: () {onTapArrowleft22(context);}), Container(height: getVerticalSize(46.5), width: getHorizontalSize(46), margin: getMargin(left: 20, top: 2), child: Stack(alignment: Alignment.bottomCenter, children: [AppbarImage(height: getSize(46), width: getSize(46), imagePath: ImageConstant.imgProfile46x46), AppbarImage(height: getSize(46), width: getSize(46), svgPath: ImageConstant.imgCheckmarkPrimarycontainer46x46)])), Padding(padding: getPadding(left: 14, bottom: 3), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [AppbarSubtitle3(text: "Customer Service"), AppbarSubtitle2(text: "Online", margin: getMargin(top: 5, right: 70))])), AppbarImage(height: getSize(22), width: getSize(22), svgPath: ImageConstant.imgOverflowmenuOnprimary, margin: getMargin(left: 91, top: 13, bottom: 13))])), Padding(padding: getPadding(top: 19), child: SizedBox(width: double.maxFinite, child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.gray10001)))]), styleType: Style.bgFill), body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 30, right: 24, bottom: 30), child: Column(crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(left: 44), padding: getPadding(all: 15), decoration: AppDecoration.fill.copyWith(borderRadius: BorderRadiusStyle.customBorderTL12), child: Opacity(opacity: 0.9, child: Padding(padding: getPadding(top: 1), child: Text("Why did the expedition turning around?", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumWhiteA70001_1)))), Padding(padding: getPadding(top: 12), child: Text("5:09 Pm", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.labelLargeBluegray200)), Align(alignment: Alignment.centerLeft, child: Container(width: getHorizontalSize(305), margin: getMargin(top: 22), decoration: BoxDecoration(color: appTheme.gray50, borderRadius: BorderRadius.only(topLeft: Radius.circular(getHorizontalSize(12)), topRight: Radius.circular(getHorizontalSize(12)), bottomRight: Radius.circular(getHorizontalSize(12)))), child: ReadMoreText("There are several possible roundabout\nexpeditions :\n\nThere is an error in the package\nLack of goods, or not in accordance with\nthe order that has been made.\n 2.  Constrained by the weather\nTherewas a big rain, earthquake that\nmade it impossible to carry out an\nexpedition.\n", trimLines: 11, colorClickableText: theme.colorScheme.primaryContainer.withOpacity(1), trimMode: TrimMode.Line, trimCollapsedText: "Read More", moreStyle: CustomTextStyles.bodyMediumOutfitBluegray30001, lessStyle: CustomTextStyles.bodyMediumOutfitBluegray30001))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(top: 12), child: Text("5:20 Pm", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.labelLargeBluegray200))), CustomElevatedButton(text: "Ah okay, thanks for your information", margin: getMargin(left: 69, top: 22), buttonStyle: CustomButtonStyles.fillPrimaryContainer.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(53)))), buttonTextStyle: CustomTextStyles.bodyMediumWhiteA70001_1), Padding(padding: getPadding(top: 12, bottom: 5), child: Text("5:09 Pm", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.labelLargeBluegray200))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homeScreenPage; case BottomBarEnum.Myorder: return AppRoutes.myOrderFromMeTabContainerPage; case BottomBarEnum.Messages: return AppRoutes.messagesPage; case BottomBarEnum.Profile: return AppRoutes.myProfilePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homeScreenPage: return HomeScreenPage(); case AppRoutes.myOrderFromMeTabContainerPage: return MyOrderFromMeTabContainerPage(); case AppRoutes.messagesPage: return MessagesPage(); case AppRoutes.myProfilePage: return MyProfilePage(); default: return DefaultWidget();} } 


/// Navigates back to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is used
/// to navigate back to the previous screen.
onTapArrowleft22(BuildContext context) { Navigator.pop(context); } 
 }
